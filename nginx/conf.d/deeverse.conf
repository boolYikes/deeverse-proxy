upstream jenkins {
    keepalive 32;
    server jenkins:8080;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name dees.kr www.dees.kr;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name dees.kr www.dees.kr;

    ssl_certificate /etc/letsencrypt/live/dees.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dees.kr/privkey.pem;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    resolver 127.0.0.11;

    # For Jenkins the BUTTler
    ignore_invalid_headers off;

    location ~ "^\/jenkins\/static\/[0-9a-fA-F]{8}\/(.*)$" {
    # rewrite all static files into requests to the root
    # E.g /static/12345678/css/something.css will become /css/something.css
    # jenkins-temp volume
        root /mnt/jenkins_temp/war/;
        # (.*) captures the rest and then assigns it to $1
        # last tells nginx to re-eval the new uri
        rewrite "^\/jenkins\/static\/[0-9a-fA-F]{8}\/(.*)" /jenkins/$1 last;
    }

    location /jenkins/userContent {
        # jenkins-home volume
        root /mnt/jenkins_home/;
        if (!-f $request_filename) {
            rewrite (.*) /jenkins/$1 last;
            break;
        }
        sendfile on;
    }

    # Reload Request From Certbot
    # Placeholder
    location /reload-nginx {
        internal;
        return 200 "RELOAD YOUR NGINX";
    }

    # Navidrome Jukebox Stack
    location /navidrome/ {
        set $backend_navidrome "navidrome:4533";
        # rewrite ^/navidrome/(.*)$ /$1 break;
        # proxy_pass http://$backend_navidrome/;
        proxy_pass http://$backend_navidrome;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Fix base URLs
        sub_filter_once off;
        sub_filter 'href="/' 'href="/navidrome/';
        sub_filter 'src="/' 'src="/navidrome/';
        sub_filter 'action="/' 'action="/navidrome/';
    }

    location = /navidrome {
        return 302 /navidrome/;
    }

    # Fortpolio Stack
    location /fortpolio/ {
        set $backend_fortpolio "fortpolio:3005";
        # rewrite ^/fortpolio/(.*)$ /$1 break;
        # proxy_pass http://$backend_fortpolio/;
        proxy_pass http://$backend_fortpolio;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # No websocket needed
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";

        sub_filter_once off;
        sub_filter 'href="/' 'href="/fortpolio/';
        sub_filter 'src="/' 'src="/fortpolio/';
        sub_filter 'action="/' 'action="/fortpolio/';
    }

    location = /fortpolio {
        return 302 /fortpolio/;
    }

    # Jenkins Stack
    location /jenkins/ {
        sendfile off;
        
        proxy_pass http://jenkins;
        proxy_redirect default;
        proxy_http_version 1.1;

        # Jenkins ws agent
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Upgrade $http_upgrade;

        proxy_set_header Host $http_host; # host? or http_host?
        proxy_set_header X-Real-IP $remote_addr;  # Forward client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward X-Forwarded-For chain
        proxy_set_header X-Forwarded-Host $host;  # Set X-Forwarded-Host to the original Host header
        proxy_set_header X-Forwarded-Port $server_port;  # Set X-Forwarded-Port to the original port (80 or 443)
        proxy_set_header X-Forwarded-Proto $scheme;  # Set X-Forwarded-Proto to "http" or "https" based on scheme
        proxy_max_temp_file_size 0;

        # upload size
        client_max_body_size 10m;
        client_body_buffer_size 128k;

        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        proxy_read_timeout 90;
        proxy_request_buffering off;  # Required for HTTP CLI commands

        # sub_filter_once off;
        # sub_filter 'href="/' 'href="/jenkins/';
        # sub_filter 'src="/' 'src="/jenkins/';
        # sub_filter 'action="/' 'action="/jenkins/';
    }

    location = /jenkins {
        return 302 /jenkins/;
    }
}
